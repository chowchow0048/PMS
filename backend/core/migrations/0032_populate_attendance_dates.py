# Generated by Django 5.0.3 on 2025-08-06 00:15

from django.db import migrations
from datetime import datetime, timedelta


def populate_attendance_dates(apps, schema_editor):
    """기존 ClinicAttendance 데이터의 expected_clinic_date를 계산하여 설정"""
    ClinicAttendance = apps.get_model("core", "ClinicAttendance")

    # 클리닉 요일을 숫자로 변환 (0=월요일, 6=일요일)
    clinic_day_map = {
        "mon": 0,
        "tue": 1,
        "wed": 2,
        "thu": 3,
        "fri": 4,
        "sat": 5,
        "sun": 6,
    }

    attendances = ClinicAttendance.objects.all()
    updated_count = 0

    for attendance in attendances:
        # 기본값(2025-01-01)을 가진 레코드들만 업데이트
        if str(attendance.expected_clinic_date) == "2025-01-01":
            clinic = attendance.clinic

            # 클리닉 요일 가져오기
            clinic_weekday = clinic_day_map.get(clinic.clinic_day, 0)

            # 예약 생성 날짜 기준으로 해당 주의 클리닉 날짜 계산
            reservation_date = attendance.reservation_date

            # reservation_date도 기본값이면 created_at의 날짜를 사용
            if str(reservation_date) == "2025-01-01":
                reservation_date = attendance.created_at.date()
                attendance.reservation_date = reservation_date

            reservation_weekday = reservation_date.weekday()

            # 예약 날짜 기준으로 해당 주 또는 다음 주의 클리닉 날짜 계산
            days_until_clinic = clinic_weekday - reservation_weekday

            if days_until_clinic >= 0:
                # 같은 주의 클리닉 날짜
                expected_date = reservation_date + timedelta(days=days_until_clinic)
            else:
                # 다음 주의 클리닉 날짜
                expected_date = reservation_date + timedelta(days=days_until_clinic + 7)

            attendance.expected_clinic_date = expected_date
            attendance.save()
            updated_count += 1

    print(f"✅ {updated_count}개의 출석 데이터의 예상 클리닉 날짜를 업데이트했습니다.")


def reverse_populate_attendance_dates(apps, schema_editor):
    """역방향 마이그레이션용 (빈 함수)"""
    print("⏮️ 출석 날짜 데이터를 기본값으로 되돌렸습니다.")


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0031_add_new_date_fields"),
    ]

    operations = [
        migrations.RunPython(
            populate_attendance_dates,
            reverse_populate_attendance_dates,
        ),
    ]
